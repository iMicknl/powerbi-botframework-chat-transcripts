name: Comment with artifact on PR (Power BI visual)

on:
  workflow_run:
    workflows: ["Package Power BI visual (PR)"]
    types:
      - completed

jobs:
  comment_with_artifact_url:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'

    steps:
      - name: 'Retrieve context from parent PR/workflow (artifact URL / SHA / PR)'
        uses: actions/github-script@v7
        id: parent-context
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // Retrieve artifact ID for "custom-visual-test-version"
            const response = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            const artifact_id = response.data.artifacts.find(artifact => artifact.name === "custom-visual-test-version").id;

            const details = {
              artifact_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.payload.workflow_run.id}/artifacts/${artifact_id}`,
              sha: context.payload.workflow_run.head_sha,
              pr_number: context.payload.workflow_run.pull_requests[0].number
            }

            return details

      - name: Remove previous PR comments created by this workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const parent_context = ${{steps.parent-context.outputs.result}}
            const userName = "github-actions[bot]"
            const includesString = "Custom Visual created for"

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parent_context.pr_number
            })

            const filteredComments = comments.data.filter(
              it => it.user?.login === userName && it.body?.includes(includesString)
            )

            for (const comment of filteredComments) {
              await github.request(
                'DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}',
                {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                }
              )
            }

      - name: Create new comment with artifact details
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const parent_context = ${{steps.parent-context.outputs.result}};
            github.rest.issues.createComment({
              issue_number: parent_context.pr_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ¤– Custom Visual created for ${parent_context.sha}! âœ… 
              
              Download [custom-visual-test-version]( ${parent_context.artifact_url}) and test it in Power BI prior to merging this PR.`
            })
