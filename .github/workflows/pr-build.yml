name: Package Power BI visual (PR)

on:
  pull_request:

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Retrieve pbiviz.json file to retrieve version number
        run: echo "PBIVIZ_JSON=$(jq -c . < pbiviz.json)" >> $GITHUB_ENV

      - name: Update pbiviz.json version to include PR number
        uses: jossef/action-set-json-field@v2
        with:
          file: pbiviz.json
          field: visual.version
          value: "${{ fromJson(env.PBIVIZ_JSON).visual.version }}beta#${{ github.event.pull_request.number }}"

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies (CI)
        run: npm ci

      - name: Package Power BI visual
        run: npm run package

      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: custom-visual-test-version
          path: dist/*.pbiviz
          if-no-files-found: error

      - name: Remove previous comments
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const username = "github-actions"
            const bodyRegex = ".*Custom Visual created for.*"

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            })
            
            const filteredComments = resp.data.filter(
              it => it.user?.login === userName && it.body?.match(bodyRegex)
            )

            for (const comment of filteredComments) {
              console.log(
                `Processing issue ${comment.issue_url} user: ${comment.user?.login} comment: ${comment.body}`
              )

              await github.request(
                'DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}',
                {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                }
              )
            }

      - name: Build artifact URL
        id: artifact-url
        run: |
          url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }}"
          echo url: $url
          echo "url=$url" >> $GITHUB_OUTPUT
          echo $github
      
      - name: Comment with details on the packaged version (for testing purposes)
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Custom Visual created! ðŸ¤– 
              
              Download [custom-visual-test-version]( ${{ steps.artifact-url.outputs.url }}) and test it in Power BI prior to merging this PR.`
            })
